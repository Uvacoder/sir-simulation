{"version":3,"sources":["simulation.js","ui.js"],"names":["SirSimulation","running","rate","cs","range","color","idToI","vacc","beta","gamma","interval","callback","current_inf","total_inf","day","init","counties","max_pop","d3","scale","pow","exponent","domain","init_cs","start","cid","n","c","get","inf","sus","rec","setInterval","update","that","i","length","da","db","step","flush","max","Math","pop","total_infected","total","self","map","set","id","reset","clearInterval","County","simulation","coms","d","rgb","r","b","g","toString","select","style","com","ci","work_id","dx","width","height","active_state","active_counties","projection","geo","albersUsa","translate","path","svg","append","attr","popById","commutes","active_commutes","ready","error","us","commuter_data","onchage","selectAll","data","topojson","feature","objects","features","enter","on","parentNode","appendChild","classed","county_clicked","states","state_clicked","node","state_id","floor","undefined","filter","home_id","each","push","r_nought","document","getElementById","value","D","onchange","bounds","dy","x","y","transition","duration","c_inf","t_inf","innerHTML","toLocaleString","round","queue","defer","json","tsv","population","await","frameElement"],"mappings":";AAkKC,aAlKM,SAASA,IACTC,KAAAA,SAAU,EACVC,KAAAA,KAAO,GAEPC,KAAAA,GACAC,KAAAA,MACAC,KAAAA,MACAC,KAAAA,MAEAC,KAAAA,KACAC,KAAAA,KACAC,KAAAA,MAEAC,KAAAA,SAEAC,KAAAA,SACAC,KAAAA,YACAC,KAAAA,UACAC,KAAAA,IAAM,EAENC,KAAAA,KAAO,SAASC,EAAUR,EAAMC,EAAOF,EAAMI,GAC3CR,KAAAA,GAAKa,EACLR,KAAAA,KAAOA,EAAO,KAAKN,KACnBO,KAAAA,MAAQA,EAAQ,KAAKP,KACrBK,KAAAA,KAAOA,EACPI,KAAAA,SAAWA,EACXP,KAAAA,MAAQ,CAAC,EAAG,KAAKa,WACjBZ,KAAAA,MAAQa,GAAGC,MACbC,MACAC,SAAS,KACTC,OAAO,KAAKlB,OACZA,MAAM,CAAC,UAAW,YAChBmB,KAAAA,WAGFC,KAAAA,MAAQ,SAASC,EAAKC,GACpBzB,KAAAA,SAAU,EACT0B,IAAAA,EAAI,KAAKxB,GAAG,KAAKG,MAAMsB,IAAIH,IACjCE,EAAEE,KAAOH,EACLC,EAAEG,KAAOJ,EACXC,EAAEG,KAAOJ,EAETC,EAAEI,KAAOL,EAENd,KAAAA,YAAcc,EACdb,KAAAA,UAAYa,EACZZ,KAAAA,IAAM,EACNJ,KAAAA,SAAWsB,YAAY,KAAKC,OAAQ,IAAO,KAAK/B,KAAM,MACtD+B,KAAAA,OAAO,OAGTA,KAAAA,OAAS,SAAAC,GAERP,IAAAA,EADJO,EAAKvB,SAASuB,EAAKtB,YAAasB,EAAKrB,UAAWqB,EAAKpB,IAAMoB,EAAKhC,MAE3D,IAAA,IAAIiC,EAAI,EAAGA,EAAID,EAAK/B,GAAGiC,OAAQD,KAClCR,EAAIO,EAAK/B,GAAGgC,IACVE,GAAK,EACPV,EAAEW,GAAK,EAEJ,IAAIH,EAAI,EAAGA,EAAID,EAAK/B,GAAGiC,OAAQD,KAClCR,EAAIO,EAAK/B,GAAGgC,IACNN,IAAM,GACVF,EAAEY,OAGD,IAAIJ,EAAI,EAAGA,EAAID,EAAK/B,GAAGiC,OAAQD,IAClCD,EAAK/B,GAAGgC,GAAGK,QAGbN,EAAKpB,IAAMoB,EAAKpB,IAAM,GAGnBG,KAAAA,QAAU,WAER,IADDwB,IAAAA,EAAM,EACDN,EAAI,EAAGA,EAAI,KAAKhC,GAAGiC,OAAQD,IAClCM,EAAMC,KAAKD,IAAI,KAAKtC,GAAGgC,GAAGQ,IAAKF,GAE1BA,OAAAA,GAGJG,KAAAA,eAAiB,WAEf,IADDC,IAAAA,EAAQ,EACHV,EAAI,EAAGA,EAAI,KAAKhC,GAAGiC,OAAQD,IAClCU,GAAS,KAAK1C,GAAGgC,GAAGN,IAEfgB,OAAAA,GAGHC,IAAAA,EAAO,KAERvB,KAAAA,QAAU,WAETI,IAAAA,EADCrB,KAAAA,MAAQY,GAAG6B,MAEX,IAAA,IAAIZ,EAAI,EAAGA,EAAI,KAAKhC,GAAGiC,OAAQD,IAClCR,EAAI,KAAKxB,GAAGgC,GACP7B,KAAAA,MAAM0C,IAAIrB,EAAEsB,GAAId,GACrBR,EAAEI,IAAMJ,EAAEgB,IAAMG,EAAKvC,KACrBoB,EAAEG,IAAMH,EAAEgB,IAAMhB,EAAEI,IAClBJ,EAAEE,IAAM,EACRF,EAAEZ,QAIDmC,KAAAA,MAAQ,WACXC,cAAc,KAAKzC,UACdC,KAAAA,SAAS,EAAG,EAAG,GACfV,KAAAA,SAAU,GAIZ,SAASmD,EAAOC,EAAYlB,EAAGc,EAAIN,EAAKW,GACxCnB,KAAAA,EAAIA,EACJc,KAAAA,GAAKA,EACLN,KAAAA,IAAMA,EACNW,KAAAA,KAAOA,EAEPjD,KAAAA,MAEAyB,KAAAA,IACAD,KAAAA,IACAE,KAAAA,IAEAM,KAAAA,GACAC,KAAAA,GAEAvB,KAAAA,KAAO,WACJY,IAAAA,EAAI0B,EAAWhD,MAAM,KAAKsC,KAC1BY,EAAIrC,GAAGsC,IAAI7B,GACjB4B,EAAEE,EAAIF,EAAEG,EACRH,EAAEI,EAAIJ,EAAEG,EACRH,EAAEG,EAAI,EACDrD,KAAAA,MAAQa,GAAGC,MACbC,MACAC,SAAS,IACTC,OAAO,CAAC,EAAG,IACXlB,MAAM,CAACuB,EAAG4B,EAAEK,aACf1C,GAAG2C,OAAY,KAAA,OAAA,KAAKZ,KAAMa,MAAM,OAAQnC,IAGrCY,KAAAA,KAAO,WACL,IAAA,IAAIJ,EAAI,EAAGA,EAAI,KAAKmB,KAAKlB,OAAQD,IAAK,CACnC4B,IAAAA,EAAM,KAAKT,KAAKnB,GAChB6B,EAAKX,EAAW/C,MAAMsB,KAAKmC,EAAIE,SAC/BtC,EAAI0B,EAAWlD,GAAG6D,GAClBtC,GAAKqC,EAAIlB,MACTqB,EAAKb,EAAW7C,KAAO,KAAKqB,KAAOH,EAAI,KAAKiB,MAAQhB,EAAEG,IAAMH,EAAEgB,KACpEhB,EAAEU,IAAM6B,EAEL7B,KAAAA,IAAMgB,EAAW7C,KAAO,KAAKqB,KAAO,KAAKC,IAAM,KAAKa,KACpDL,KAAAA,IAAMe,EAAW5C,MAAQ,KAAKoB,KAGhCW,KAAAA,MAAQ,WACNV,KAAAA,MAAQ,KAAKO,GACbR,KAAAA,KAAO,KAAKQ,GAAK,KAAKC,GACtBP,KAAAA,KAAO,KAAKO,GAEjBe,EAAWxC,WAAa,KAAKwB,GAC7BgB,EAAWzC,aAAe,KAAKyB,GAAK,KAAKC,GAEzCpB,GAAG2C,OAAY,KAAA,OAAA,KAAKZ,KAAMa,MAAM,OAAQ,KAAKzD,MAAM,KAAKwB,IAAM,KAAKc,OAEtE,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAAA,QAAA,OAAA;;ACPK,aA3JN,IAAA,EAAA,QAAA,mBAEYU,EAAa,IAAIrD,EAAJ,cAEfmE,EAAQ,IACRC,EAAS,IAGTC,EAAenD,GAAG2C,OAAO,MACzBS,EAAkBpD,GAAG2C,OAAO,MAG5BU,EAAarD,GAAGsD,IAAIC,YACnBtD,MAAM,MACNuD,UAAU,CAACP,EAAQ,EAAGC,EAAS,IAGhCO,EAAOzD,GAAGsD,IAAIG,OACbJ,WAAWA,GAGZK,EAAM1D,GAAG2C,OAAO,QAAQgB,OAAO,OAC9BC,KAAK,QAASX,GACdW,KAAK,SAAUV,GAGpBQ,EAAMA,EAAIC,OAAO,KAGjB,IAAIE,EAAU7D,GAAG6B,MAGbiC,EAAW,GACXC,EAAkB,GAStB,SAASC,EAAMC,EAAOC,EAAIC,EAAeC,GACnCH,GAAAA,EAAO,MAAMA,EAEjBH,EAAWK,EAGXT,EAAIC,OAAO,KACRC,KAAK,QAAS,YACdS,UAAU,QACRC,KAAKC,SAASC,QAAQN,EAAIA,EAAGO,QAAQ3E,UAAU4E,UACjDC,QAAQhB,OAAO,QACbC,KAAK,IAAKH,GACVG,KAAK,QAAS,UACdA,KAAK,KAAM,SAAUvB,GAAY,MAAA,IAAMA,EAAEN,KACzC6C,GAAG,YAAa,WACVC,KAAAA,WAAWC,YAAY,MAC5B9E,GAAG2C,OAAO,MACPoC,QAAQ,WAAW,KAEvBH,GAAG,WAAY,WACd5E,GAAG2C,OAAO,MACPoC,QAAQ,WAAW,KAEvBH,GAAG,QAASI,GAGjBtB,EAAIC,OAAO,KACRC,KAAK,QAAS,UACdS,UAAU,QACRC,KAAKC,SAASC,QAAQN,EAAIA,EAAGO,QAAQQ,QAAQP,UAC/CC,QAAQhB,OAAO,QACbC,KAAK,IAAKH,GACVG,KAAK,QAAS,SACdgB,GAAG,QAASM,GAGnB,SAASA,EAAc7C,GACjBc,GAAuB,MAAvBA,EAAagC,QAAkBhC,EAAagC,QAAU,KAAM,OAAOnD,IAGvEmB,EAAa4B,QAAQ,UAAU,GAC/B3B,EAAgB2B,QAAQ,UAAU,GAGlC5B,EAAenD,GAAG2C,OAAO,MAAMoC,QAAQ,UAAU,GAG7CK,IAAAA,EAAW/C,EAAEN,GAIjBqB,GAHAA,EAAkBM,EAAIf,OAAO,cACR0B,UAAU,eACRU,QAAQ,SAAU,SAAU1C,GAAYb,OAAAA,KAAK6D,MAAMhD,EAAEN,GAAG,MAASqD,QAAkCE,IAAtBzB,EAAQnD,IAAI2B,EAAEN,OAChFwD,OAAO,WAGzCxB,EAAkBD,EAASyB,OAAO,SAAUlD,GACtCN,IAAAA,GAAMM,EAAEmD,QACLhE,OAAAA,KAAK6D,MAAMtD,EAAK,MAASqD,QAAgCE,IAApBzB,EAAQnD,IAAIqB,KAItDjC,IAAAA,EAAW,GACfsD,EAAgBqC,KAAK,SAAUpD,EAAGpB,GAChCnB,EAAS4F,KAAK,IAAIxD,EAAJ,OAAWC,EAAYlB,EAAGoB,EAAEN,GAAI8B,EAAQnD,IAAI2B,EAAEN,IAAKgC,EAAgBwB,OAAO,SAAU9E,GAAY,OAACA,EAAE+E,SAAWnD,EAAEN,SAE5H4D,IAAAA,EAAWC,SAASC,eAAe,gBAAgBC,MACnDC,EAAIH,SAASC,eAAe,YAAYC,MACxCzG,EAAOuG,SAASC,eAAe,QAAQC,MAAQ,IACnD3D,EAAWtC,KAAKC,EAAU6F,GAAU,EAAEI,GAAI,EAAEA,EAAG1G,EAAM2G,GAGjDC,IAAAA,EAASxC,EAAKwC,OAAO5D,GACrBW,EAAKiD,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BC,EAAKD,EAAO,GAAG,GAAKA,EAAO,GAAG,GAC9BE,GAAKF,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EACpCG,GAAKH,EAAO,GAAG,GAAKA,EAAO,GAAG,IAAM,EACpChG,EAAQ,GAAKuB,KAAKD,IAAIyB,EAAKC,EAAOiD,EAAKhD,GACvCM,EAAY,CAACP,EAAQ,EAAIhD,EAAQkG,EAAGjD,EAAS,EAAIjD,EAAQmG,GAG7D1C,EAAI2C,aACCC,SAAS,KACT1D,MAAM,eAAgB,IAAM3C,EAAQ,MACpC2D,KAAK,YAAa,aAAeJ,EAAY,UAAYvD,EAAQ,KAGxE,SAAS+E,EAAe3C,GAClB,IAACF,EAAWpD,QAAS,CACnByB,IAAAA,EAAIgB,KAAK6D,MAAMO,SAASC,eAAe,YAAYC,OACvD3D,EAAW7B,MAAM+B,EAAEN,GAAIvB,IAI3B,SAASwB,IACPG,EAAWH,QAEXmB,EAAa4B,QAAQ,UAAU,GAC/B5B,EAAenD,GAAG2C,OAAO,MAEzBS,EAAgB2B,QAAQ,UAAU,GAClC3B,EAAkBpD,GAAG2C,OAAO,MAE5Be,EAAI2C,aACCC,SAAS,KACT1D,MAAM,eAAgB,SACtBgB,KAAK,YAAa,IAGzB,SAASoC,EAASO,EAAOC,EAAO5G,GAC9BgG,SAASC,eAAe,WAAWY,UAAYjF,KAAK6D,MAAMzF,GAAK8G,iBAC/Dd,SAASC,eAAe,SAASY,UAAYjF,KAAKmF,MAAMJ,GAAOG,iBAC/Dd,SAASC,eAAe,SAASY,UAAYjF,KAAKmF,MAAMH,GAAOE,iBApHjEE,QACKC,MAAM7G,GAAG8G,KAAM,gBACfD,MAAM7G,GAAG+G,IAAK,qBACdF,MAAM7G,GAAG+G,IAAK,sBAAuB,SAAU1E,GAAKwB,EAAQ/B,IAAIO,EAAEN,IAAKM,EAAE2E,cACzEC,MAAMjD,GAmHXhE,GAAG2C,OAAOf,KAAKsF,cAActE,MAAM,SAAUM,EAAS","file":"ui.ac8b03c7.js","sourceRoot":"..","sourcesContent":["export function SirSimulation() {\n  this.running = false;\n  this.rate = 10;\n\n  this.cs;\n  this.range;\n  this.color;\n  this.idToI;\n\n  this.vacc;\n  this.beta;\n  this.gamma;\n\n  this.interval;\n\n  this.callback;\n  this.current_inf;\n  this.total_inf;\n  this.day = 1;\n\n  this.init = function(counties, beta, gamma, vacc, callback) {\n    this.cs = counties;\n    this.beta = beta / this.rate;\n    this.gamma = gamma / this.rate;\n    this.vacc = vacc;\n    this.callback = callback;\n    this.range = [0, this.max_pop()];\n    this.color = d3.scale\n      .pow()\n      .exponent(0.33)\n      .domain(this.range)\n      .range([\"#ffffff\", \"#08306b\"]);\n    this.init_cs();\n  };\n\n  this.start = function(cid, n) {\n    this.running = true;\n    const c = this.cs[this.idToI.get(cid)];\n    c.inf += n;\n    if (c.sus >= n) {\n      c.sus -= n;\n    } else {\n      c.rec -= n;\n    }\n    this.current_inf = n;\n    this.total_inf = n;\n    this.day = 0;\n    this.interval = setInterval(this.update, 1000 / this.rate, this);\n    this.update(this);\n  };\n\n  this.update = that => {\n    that.callback(that.current_inf, that.total_inf, that.day / that.rate);\n    let c;\n    for (var i = 0; i < that.cs.length; i++) {\n      c = that.cs[i];\n      c.da = 0;\n      c.db = 0;\n    }\n    for (var i = 0; i < that.cs.length; i++) {\n      c = that.cs[i];\n      if (c.inf > 0) {\n        c.step();\n      }\n    }\n    for (var i = 0; i < that.cs.length; i++) {\n      that.cs[i].flush();\n    }\n\n    that.day = that.day + 1;\n  };\n\n  this.max_pop = function() {\n    let max = 0;\n    for (let i = 0; i < this.cs.length; i++) {\n      max = Math.max(this.cs[i].pop, max);\n    }\n    return max;\n  };\n\n  this.total_infected = function() {\n    let total = 0;\n    for (let i = 0; i < this.cs.length; i++) {\n      total += this.cs[i].inf;\n    }\n    return total;\n  };\n\n  const self = this;\n\n  this.init_cs = function() {\n    this.idToI = d3.map();\n    let c;\n    for (let i = 0; i < this.cs.length; i++) {\n      c = this.cs[i];\n      this.idToI.set(c.id, i);\n      c.rec = c.pop * self.vacc;\n      c.sus = c.pop - c.rec;\n      c.inf = 0;\n      c.init();\n    }\n  };\n\n  this.reset = function() {\n    clearInterval(this.interval);\n    this.callback(0, 0, 0);\n    this.running = false;\n  };\n}\n\nexport function County(simulation, i, id, pop, coms) {\n  this.i = i;\n  this.id = id;\n  this.pop = pop;\n  this.coms = coms;\n\n  this.color;\n\n  this.sus;\n  this.inf;\n  this.rec;\n\n  this.da;\n  this.db;\n\n  this.init = function() {\n    const c = simulation.color(this.pop);\n    const d = d3.rgb(c);\n    d.r = d.b;\n    d.g = d.b;\n    d.b = 0;\n    this.color = d3.scale\n      .pow()\n      .exponent(0.2)\n      .domain([0, 1])\n      .range([c, d.toString()]);\n    d3.select(`#s${this.id}`).style(\"fill\", c);\n  };\n\n  this.step = function() {\n    for (let i = 0; i < this.coms.length; i++) {\n      const com = this.coms[i];\n      const ci = simulation.idToI.get(+com.work_id);\n      const c = simulation.cs[ci];\n      const n = +com.total;\n      const dx = simulation.beta * this.inf * (n / this.pop) * (c.sus / c.pop);\n      c.da += dx;\n    }\n    this.da += simulation.beta * this.inf * (this.sus / this.pop);\n    this.db += simulation.gamma * this.inf;\n  };\n\n  this.flush = function() {\n    this.sus += -this.da;\n    this.inf += this.da - this.db;\n    this.rec += this.db;\n\n    simulation.total_inf += this.da;\n    simulation.current_inf += this.da - this.db;\n\n    d3.select(`#s${this.id}`).style(\"fill\", this.color(this.inf / this.pop));\n  };\n}\n\n","import { County, SirSimulation } from './simulation.js';\n\n      const simulation = new SirSimulation();\n\n      var width = 960,\n          height = 600;\n\n      /* d3 selectors with active elements when a state is selected */\n      var active_state = d3.select(null),\n          active_counties = d3.select(null);\n\n      /* standard US projection */\n      var projection = d3.geo.albersUsa()\n          .scale(1280)\n          .translate([width / 2, height / 2]);\n\n      /* path used to draw all geometric elements */\n      var path = d3.geo.path()\n          .projection(projection);\n\n      /* create a new svg element */\n      var svg = d3.select(\"#vis\").append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height);\n\n      /* chrome cannot handle svg transforms, so svg is really a nested g tag */\n      svg = svg.append(\"g\");\n\n      /* map for converting county id (fips) to population */\n      var popById = d3.map();\n\n      /* array of commutes */\n      var commutes = [],\n          active_commutes = [];\n\n      /* wait for files to load and update popById */\n      queue()\n          .defer(d3.json, \"data/us.json\")\n          .defer(d3.tsv, \"data/commuter.tsv\")\n          .defer(d3.tsv, \"data/population.tsv\", function (d) { popById.set(d.id, +d.population); })\n          .await(ready);\n\n      function ready(error, us, commuter_data, onchage) {\n        if (error) throw error;\n\n        commutes = commuter_data;\n\n        /* draw all counties */\n        svg.append(\"g\")\n          .attr(\"class\", \"counties\")\n          .selectAll(\"path\")\n            .data(topojson.feature(us, us.objects.counties).features)\n          .enter().append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"class\", \"county\")\n            .attr(\"id\", function (d) { return \"s\" + d.id; })\n            .on(\"mouseover\", function () {\n              this.parentNode.appendChild(this);\n              d3.select(this)\n                .classed(\"hovered\", true);\n            })\n            .on(\"mouseout\", function () {\n              d3.select(this)\n                .classed(\"hovered\", false);\n            })\n            .on(\"click\", county_clicked);\n\n        /* draw all states */\n        svg.append(\"g\")\n          .attr(\"class\", \"states\")\n          .selectAll(\"path\")\n            .data(topojson.feature(us, us.objects.states).features)\n          .enter().append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"class\", \"state\")\n            .on(\"click\", state_clicked);\n      }\n\n      function state_clicked(d) {\n        if (active_state.node() != null && active_state.node() != this) return reset();\n\n        /* remove old active states and counties */\n        active_state.classed(\"active\", false);\n        active_counties.classed(\"active\", false);\n\n        /* make the clicked state active */\n        active_state = d3.select(this).classed(\"active\", true);\n\n        /* make the state's counties active */\n        var state_id = d.id;\n        active_counties = svg.select(\"g.counties\")\n                            .selectAll(\"path.county\")\n                              .classed(\"active\", function (d) { return Math.floor(d.id/1000) == state_id && popById.get(d.id) !== undefined; });\n        active_counties = active_counties.filter(\".active\");\n\n        /* get all relevant commutes */\n        active_commutes = commutes.filter(function (d) {\n          var id = +d.home_id;\n          return Math.floor(id / 1000) == state_id && popById.get(id) !== undefined;\n        });\n\n        /* initialize the simulation */\n        var counties = [];\n        active_counties.each(function (d, i) {\n          counties.push(new County(simulation, i, d.id, popById.get(d.id), active_commutes.filter(function (c) { return +c.home_id == d.id; })));\n        });\n        var r_nought = document.getElementById(\"reproduction\").value;\n        var D = document.getElementById(\"duration\").value;\n        var vacc = document.getElementById(\"vacc\").value / 100;\n        simulation.init(counties, r_nought*(1/D), 1/D, vacc, onchange);\n\n        /* get bounds of state */\n        var bounds = path.bounds(d),\n            dx = bounds[1][0] - bounds[0][0],\n            dy = bounds[1][1] - bounds[0][1],\n            x = (bounds[0][0] + bounds[1][0]) / 2,\n            y = (bounds[0][1] + bounds[1][1]) / 2,\n            scale = .9 / Math.max(dx / width, dy / height),\n            translate = [width / 2 - scale * x, height / 2 - scale * y];\n\n        /* transition svg to fit bounds of state */\n        svg.transition()\n            .duration(750)\n            .style(\"stroke-width\", 1.5 / scale + \"px\")\n            .attr(\"transform\", \"translate(\" + translate + \")scale(\" + scale + \")\");\n      }\n\n      function county_clicked(d) {\n        if (!simulation.running) {\n          var n = Math.floor(document.getElementById(\"infected\").value);\n          simulation.start(d.id, n);\n        }\n      }\n\n      function reset() {\n        simulation.reset();\n\n        active_state.classed(\"active\", false);\n        active_state = d3.select(null);\n\n        active_counties.classed(\"active\", false);\n        active_counties = d3.select(null);\n\n        svg.transition()\n            .duration(750)\n            .style(\"stroke-width\", \"1.5px\")\n            .attr(\"transform\", \"\");\n      }\n\n      function onchange(c_inf, t_inf, day) {\n        document.getElementById(\"sim_day\").innerHTML = Math.floor(day).toLocaleString();\n        document.getElementById(\"c_inf\").innerHTML = Math.round(c_inf).toLocaleString();\n        document.getElementById(\"t_inf\").innerHTML = Math.round(t_inf).toLocaleString();\n      }\n\n      d3.select(self.frameElement).style(\"height\", height + \"px\");"]}